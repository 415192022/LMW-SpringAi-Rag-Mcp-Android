plugins {
    alias(libs.plugins.androidLibrary)
    alias(libs.plugins.jetbrainsKotlinAndroid)
    alias(libs.plugins.kotlinKapt)
    alias(libs.plugins.hiltAndroid)
}

android {
    namespace 'com.lmw.mcp_rag_chat.feature.chat'
    compileSdk 35

    defaultConfig {
        minSdk 24
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    
    // 配置kapt
    kapt {
        correctErrorTypes true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.1'
    }
}

dependencies {
    // 模块依赖 - 使用api依赖data模块，传递data、domain和core的API依赖
    api project(':data')
    // 仅在内部实现中使用core和domain模块
    implementation project(':core')
    implementation project(':domain')
    
    // 对外暴露的API依赖（可被依赖此模块的其他模块访问）
    api libs.bundles.feature.chat.api
    
    // 内部实现依赖（仅在本模块内部使用）
    implementation platform(libs.androidx.compose.bom)
    implementation libs.bundles.feature.chat.impl
    
    // 依赖注入
    implementation libs.hilt.android
    implementation libs.hilt.navigation.compose
    kapt libs.hilt.compiler
    
    // 测试依赖
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest
}