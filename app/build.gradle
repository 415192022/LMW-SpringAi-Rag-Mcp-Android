plugins {
    alias(libs.plugins.androidApplication)
    alias(libs.plugins.jetbrainsKotlinAndroid)
    alias(libs.plugins.kotlinKapt)
    alias(libs.plugins.hiltAndroid)
}

android {
    namespace 'com.lmw.mcp_rag_chat_android'
    compileSdk 35

    defaultConfig {
        applicationId "com.lmw.mcp_rag_chat_android"
        minSdk 24
        targetSdk 35
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.1'
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    // 模块依赖 - 只需要依赖feature:chat模块，其他模块的API依赖会自动传递
    implementation project(':feature:chat')
    
    // 应用特有的依赖
    implementation platform(libs.androidx.compose.bom)
    
    // 仅在app模块中需要的UI组件
    implementation libs.androidx.activity.compose
    implementation libs.bundles.androidx.compose
    implementation libs.androidx.navigation.compose
    
    // 依赖注入
    implementation libs.hilt.android
    implementation libs.hilt.navigation.compose
    kapt libs.hilt.compiler
    
    // 测试依赖
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.tooling
}